#include <iostream>
using namespace std;


class Stack{
    private:
    int top;
    int*arr;
    int size;

    public:
    Stack(int _size):size(_size),top(-1){
      arr = new int[size];
    }

    void push(int data){
      if(size-top>1){
        top++;
        arr[top] = data;
      }
      else{
        cout<<"Stack Overflow !!"<<endl;
      }
    }

    void pop(){
      if(top == -1){
        cout<<"Stack underflow !!"<<endl;
      }
      else{
        arr[top] = 0;
        top--;
      }
    }

    bool isEmpty(){
      if(top==-1){
        return true;
      }
      else{
        return false;
      }
    }
    int getTop(){
      if(top == -1){
        cout<<"Stack Underflow !!"<<endl;
        return -1;
      }
      else{
        return arr[top];
      }
    }

    int getSize(){
      return top+1;
    }

    ~Stack(){
      delete []arr;
    }
};


int main() {
  Stack s(7);

  s.push(10);
  s.push(20);
  s.push(30);
  s.push(40);
  s.push(50);
  s.push(60);

  cout<<"curr top element of stack: "<<s.getTop()<<endl;

  cout<<"curr Size of stack: "<<s.getSize()<<endl;

  while(!s.isEmpty()){
    cout<<s.getTop()<<" ";
    s.pop();
  }


  return 0;
}
