class Solution {
public:

    string decodeString(string s) {
        stack<string> st;

        for(auto & ch:s){
            if(ch == ']'){

                string stringToRepeat = "";

                while(!st.empty() && st.top()!= "["){
                    stringToRepeat += st.top();
                    st.pop();
                }
                st.pop();

                string numericString = "";
                while(!st.empty() && isdigit(st.top()[0])){
                    numericString += st.top();
                    st.pop();
                }
                reverse(numericString.begin(),numericString.end());
                int n = stoi(numericString);

                string currentDecodedString = "";    
                while(n--){
                    currentDecodedString += stringToRepeat;
                }
                st.push(currentDecodedString);
            }
            else{
                string temp(1,ch);
                st.push(temp);
            }
        }

        string ans = "";
        while(!st.empty()){
            ans += st.top();
            st.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
