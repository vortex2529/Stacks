class MinStack {

    vector<pair<int,int>> vec;

public:
    MinStack() {
        
    }
    
    void push(int val) {
        if(vec.empty()){
            pair<int,int> p = make_pair(val,val);
            vec.push_back(p);
        }
        else{
            int mini = min(vec.back().second,val);
            pair<int,int> p = make_pair(val,mini);
            vec.push_back(p);
        }
    }
    
    void pop() {
        if(vec.empty()){
            return;
        }
        else{
            vec.pop_back();
        }
    }
    
    int top() {
        return vec.back().first;
    }
    
    int getMin() {
        return vec.back().second;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
